name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: stable

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          registry-url: 'https://registry.npmjs.org'

      - name: Install GoReleaser
        run: |
          go install github.com/goreleaser/goreleaser@v1.26.2

      - name: Get version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

      - name: Run GoReleaser for GitHub release
        run: goreleaser release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build binaries for npm package
        run: goreleaser build --clean --snapshot

      - name: Update package.json version
        run: |
          cd npm-package
          # Update version using sed (more reliable than npm version)
          sed -i 's/"version": "[^"]*"/"version": "${{ steps.get_version.outputs.VERSION }}"/g' package.json
          echo "Updated package.json version to ${{ steps.get_version.outputs.VERSION }}"
          cat package.json | grep version

      - name: Prepare npm package
        run: |
          # Create necessary directories
          mkdir -p npm-package/bin
          
          # Copy the binaries to the npm package bin directory
          for dir in dist/lamacli_*; do
            if [ -d "$dir" ]; then
              dirname=$(basename "$dir")
              mkdir -p "npm-package/bin/$dirname"
              if [ -f "$dir/lamacli.exe" ]; then
                cp "$dir/lamacli.exe" "npm-package/bin/$dirname/lamacli.exe"
              else
                cp "$dir/lamacli" "npm-package/bin/$dirname/lamacli"
                chmod +x "npm-package/bin/$dirname/lamacli"
              fi
            fi
          done

      - name: Publish to npm
        run: |
          cd npm-package
          npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
